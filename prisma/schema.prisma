generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email       String
  password    String 

  username   String
  firstName   String?
  lastName    String?
  phone       String? 

  branchId    Int
  branch      Branch @relation(fields: [branchId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now()) 
  updatedAt   DateTime @updatedAt 

  @@unique([email, branchId])
  @@map("users")
}

model Hotel {
  id              Int    @id @default(autoincrement()) 
  name            String 
  website         String? 
  socialLinks     Json?  
  businessCard    String? 
  letterHead      String? 
  branches        Branch[]
  owners          HotelOwner[]
  createdAt       DateTime @default(now()) 
  updatedAt       DateTime @updatedAt 

  @@map("hotels")
}

model Branch {
  id               Int    @id @default(autoincrement()) 
  name             String 
  location         String 
  email            String 
  phone            String 
  whatsapp         String? 
  hotelId          Int    
  hotel            Hotel  @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now()) 
  updatedAt        DateTime @updatedAt 
  staff            User[]

  @@map("branches")
}
model HotelOwner {
  id        Int     @id @default(autoincrement()) 
  hotelId   Int     
  name      String  
  cnic      String  
  address   String  
  phone     String  
  email     String  
  hotel     Hotel   @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt  

  @@unique([cnic, hotelId]) 
  @@unique([email, hotelId]) 

  @@map("hotel_owners")
}


model Role {
  id         Int    @id @default(autoincrement()) 
  name       String @unique 

  @@map("roles")
}
